library(tidyverse)
library(tidymodels)
data = ames
library(tidyverse)
library(tidymodels)
ames <- data(ames)
?ames
ames
library(tidyverse)
library(tidymodels)
ames <- data(ames)
library(tidyverse)
library(tidymodels)
ames <- ames
data(ames)
theme_set(theme_minimal())
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50)
library(mdgr)
theme_set(theme_mdgr())
data(ames)
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50)
theme_set(theme_minimal())
data(ames)
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50)
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_continuous(scale = 'dollar')
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_continuous(scale = 'dollars')
library(scales)
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_continuous(scale = 'dollars')
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_continuous(scale = 'dollar')
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_continuous(labels = dollar)
# data skewed - log transform
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_continuous(labels = dollar)
# data skewed - log transform
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_log10()
ames <- ames %>%
mutate(Sale_Price = log10(Sale_Price))
library(tidyverse)
library(tidymodels)
library(scales)
library(mdgr)
theme_set(theme_minimal())
data(ames)
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_continuous(labels = dollar)
# data skewed - log transform
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_log10()
ames <- ames %>%
mutate(Sale_Price = log10(Sale_Price))
set.seed(123)
ames_split <- initial_split(ames, prob = .8)
ames_train <- training(ames_split)
ames_test <- testing(ames_split)
ames_split <- initial_split(ames, prob = .8, strata = Sale_Price)
ames_train <- training(ames_split)
ames_test <- testing(ames_split)
View(ames)
library(tidyverse)
library(tidymodels)
library(scales)
library(mdgr)
theme_set(theme_minimal())
data(ames)
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_continuous(labels = dollar)
# data skewed - log transform
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_log10()
ames <- ames %>%
mutate(Sale_Price = log10(Sale_Price))
set.seed(123)
ames_split <- initial_split(ames, prob = .8, strata = Sale_Price)
ames_train <- training(ames_split)
ames_test <- testing(ames_split)
base_model <- lm(Sale_Price ~ Neighborhood + log10(Gr_Liv_Area) + Year_Built + Bldg_Type)
base_model <- lm(Sale_Price ~ Neighborhood + log10(Gr_Liv_Area) + Year_Built + Bldg_Type, data = ames_train)
tidy(base_model)
simple_ames <-
recipe(Sale_Price ~ Neighborhood + Gr_Liv_Area + Year_Built + Bldg_Type,
data = ames_train) %>%
step_log(Gr_Liv_Area, base = 10) %>%
step_dummy(all_nominal())
simple_ames
library(tidyverse)
library(tidymodels)
library(scales)
library(mdgr)
theme_set(theme_minimal())
data(ames)
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_continuous(labels = dollar)
# data skewed - log transform
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_log10()
ames <- ames %>%
mutate(Sale_Price = log10(Sale_Price))
set.seed(123)
ames_split <- initial_split(ames, prob = .8, strata = Sale_Price)
ames_train <- training(ames_split)
ames_test <- testing(ames_split)
base_model <- lm(Sale_Price ~ Neighborhood + log10(Gr_Liv_Area) + Year_Built + Bldg_Type, data = ames_train)
tidy(base_model)
simple_ames <-
recipe(Sale_Price ~ Neighborhood + Gr_Liv_Area + Year_Built + Bldg_Type,
data = ames_train) %>%
step_log(Gr_Liv_Area, base = 10) %>%
step_dummy(all_nominal())
simple_ames <- prep(simple_ames, training = ames_train)
simple_ames
?prep
test_ex <- bake(simple_ames, new_data = ames_test)
View(test_ex)
simple_ames <-
recipe(Sale_Price ~ Neighborhood + Gr_Liv_Area + Year_Built + Bldg_Type,
data = ames_train) %>%
step_log(Gr_Liv_Area, base = 10) %>%
step_dummy(all_nominal())
# recipe is what to do to data
# bake execute recipe on particular data set to view data that model will take in
test_ex <- bake(simple_ames, new_data = ames_test)
simple_ames <- prep(simple_ames, training = ames_train)
# recipe is what to do to data
# bake execute recipe on particular data set to view data that model will take in
# must use prepped recipe
test_ex <- bake(simple_ames, new_data = ames_test)
bake(simple_ames, new_data = NULL)
simple_ames <- prep(simple_ames, training = ames_train)
bake(simple_ames, new_data = NULL)
library(tidyverse)
library(tidymodels)
library(scales)
library(mdgr)
theme_set(theme_minimal())
data(ames)
# looks at price
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_continuous(labels = dollar)
# data skewed - log transform
ggplot(ames, aes(x = Sale_Price)) +
geom_histogram(bins = 50) +
scale_x_log10()
ames <- ames %>%
mutate(Sale_Price = log10(Sale_Price))
set.seed(123)
ames_split <- initial_split(ames, prob = .8, strata = Sale_Price)
ames_train <- training(ames_split)
ames_test <- testing(ames_split)
base_model <- lm(Sale_Price ~ Neighborhood + log10(Gr_Liv_Area) + Year_Built + Bldg_Type, data = ames_train)
tidy(base_model)
simple_ames <-
recipe(Sale_Price ~ Neighborhood + Gr_Liv_Area + Year_Built + Bldg_Type,
data = ames_train) %>%
step_log(Gr_Liv_Area, base = 10) %>%
step_dummy(all_nominal())
simple_ames <- prep(simple_ames, training = ames_train, retain = TRUE)
# recipe is what to do to data
# bake execute recipe on particular data set to view data that model will take in
# must use prepped recipe
test_ex <- bake(simple_ames, new_data = ames_test)
bake(simple_ames, new_data = NULL)
bake(simple_ames)
?bake
bake(simple_ames)
bake(simple_ames, ames_train)
ggplot(ames_train, aes(y = Neighborhood)) +
geom_bar() +
labs(y = NULL)
# combine lower 1% of neighborhoods into one "other" category
simple_ames <-
recipe(Sale_Price ~ Neighborhood + Gr_Liv_Area + Year_Built + Bldg_Type,
data = ames_train) %>%
step_log(Gr_Liv_Area, base = 10) %>%
step_other(Neighborhood, threshold = 0.01) %>%
step_dummy(all_nominal())
